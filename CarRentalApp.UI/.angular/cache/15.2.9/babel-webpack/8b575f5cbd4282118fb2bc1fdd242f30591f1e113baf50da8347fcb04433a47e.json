{"ast":null,"code":"var _class;\nimport { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/car-crud.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nexport class EditCarComponent {\n  constructor(_carCrudService, toastr, _router) {\n    this._carCrudService = _carCrudService;\n    this.toastr = toastr;\n    this._router = _router;\n    //for checked attribute\n    this.isChecked = true;\n    this.editForm = new FormGroup({\n      maker: new FormControl(''),\n      model: new FormControl(''),\n      rentalPrice: new FormControl(''),\n      isAvailable: new FormControl('')\n    });\n    this.getCarToBeEdited();\n  }\n  getCarToBeEdited() {\n    this.carToBeEdited = this._carCrudService.getCarToBeEdited();\n    this.editForm.setValue({\n      maker: this.carToBeEdited.maker,\n      model: this.carToBeEdited.model,\n      rentalPrice: this.carToBeEdited.rentalPrice,\n      isAvailable: this.carToBeEdited.isAvailable\n    });\n    if (this.carToBeEdited.isAvailable == \"false\") {\n      this.isChecked = !this.isChecked;\n    }\n  }\n  onSubmit() {\n    this.toastr.info('Successfully Edited', 'Car Rental App');\n    this._router.navigate(['/cars']);\n    this.editCar();\n  }\n  editCar() {\n    const car = {\n      ...this.editForm.value,\n      id: this.carToBeEdited.id\n    };\n    this._carCrudService.editCar(this.carToBeEdited.id, car).subscribe(res => {\n      console.log(res);\n    });\n  }\n}\n_class = EditCarComponent;\n_class.ɵfac = function EditCarComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.CarCrudService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-edit-car\"]],\n  decls: 28,\n  vars: 6,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"mt-2\"], [\"formControlName\", \"maker\", \"type\", \"text\", 1, \"form-control\"], [1, \"form-group\", \"mt-3\"], [\"formControlName\", \"model\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\"], [\"formControlName\", \"rentalPrice\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\"], [1, \"form-check\"], [\"formControlName\", \"isAvailable\", \"type\", \"radio\", \"value\", \"true\", 1, \"form-check-input\", 3, \"checked\"], [1, \"form-check-label\"], [\"formControlName\", \"isAvailable\", \"type\", \"radio\", \"value\", \"false\", 1, \"form-check-input\", 3, \"checked\"], [\"type\", \"submit\", 1, \"btn\", \"btn-warning\", \"mt-3\"]],\n  template: function EditCarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function EditCarComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\");\n      i0.ɵɵtext(3, \"Maker\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\");\n      i0.ɵɵtext(7, \"Model\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\");\n      i0.ɵɵtext(11, \"Rental Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\");\n      i0.ɵɵtext(15, \"Availability\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 6);\n      i0.ɵɵelement(17, \"input\", 7);\n      i0.ɵɵelementStart(18, \"label\", 8);\n      i0.ɵɵtext(19, \"Available\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 6);\n      i0.ɵɵelement(21, \"input\", 9);\n      i0.ɵɵelementStart(22, \"label\", 8);\n      i0.ɵɵtext(23, \"Not Available\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"button\", 10);\n      i0.ɵɵtext(25, \" Edit \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(26);\n      i0.ɵɵpipe(27, \"json\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.editForm);\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"checked\", ctx.isChecked);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"checked\", ctx.isChecked);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(27, 4, ctx.editForm.value), \"\\n\");\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.RadioControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName, i5.JsonPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AACA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;;;;;;;AASvD,OAAM,MAAOC,gBAAgB;EAY3BC,YAAoBC,eAA8B,EAASC,MAAqB,EAASC,OAAe;IAApF,oBAAe,GAAfF,eAAe;IAAwB,WAAM,GAANC,MAAM;IAAwB,YAAO,GAAPC,OAAO;IAVhG;IACA,cAAS,GAAS,IAAI;IAEtB,aAAQ,GAAC,IAAIL,SAAS,CAAC;MACrBM,KAAK,EAAC,IAAIP,WAAW,CAAC,EAAE,CAAC;MACzBQ,KAAK,EAAC,IAAIR,WAAW,CAAC,EAAE,CAAC;MACzBS,WAAW,EAAC,IAAIT,WAAW,CAAC,EAAE,CAAC;MAC/BU,WAAW,EAAC,IAAIV,WAAW,CAAC,EAAE;KAC/B,CAAC;IAGA,IAAI,CAACW,gBAAgB,EAAE;EAEzB;EACAA,gBAAgB;IACd,IAAI,CAACC,aAAa,GAAC,IAAI,CAACR,eAAe,CAACO,gBAAgB,EAAE;IAC1D,IAAI,CAACE,QAAQ,CAACC,QAAQ,CAAC;MACrBP,KAAK,EAAC,IAAI,CAACK,aAAa,CAACL,KAAK;MAC9BC,KAAK,EAAC,IAAI,CAACI,aAAa,CAACJ,KAAK;MAC9BC,WAAW,EAAC,IAAI,CAACG,aAAa,CAACH,WAAW;MAC1CC,WAAW,EAAC,IAAI,CAACE,aAAa,CAACF;KAChC,CAAC;IACF,IAAG,IAAI,CAACE,aAAa,CAACF,WAAW,IAAE,OAAO,EAAC;MACzC,IAAI,CAACK,SAAS,GAAC,CAAC,IAAI,CAACA,SAAS;;EAGlC;EACAC,QAAQ;IACN,IAAI,CAACX,MAAM,CAACY,IAAI,CAAC,qBAAqB,EAAC,gBAAgB,CAAC;IACxD,IAAI,CAACX,OAAO,CAACY,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAChC,IAAI,CAACC,OAAO,EAAE;EAChB;EACAA,OAAO;IACL,MAAMC,GAAG,GAAC;MACR,GAAG,IAAI,CAACP,QAAQ,CAACQ,KAAK;MACtBC,EAAE,EAAC,IAAI,CAACV,aAAa,CAACU;KACvB;IACD,IAAI,CAAClB,eAAe,CAACe,OAAO,CAAC,IAAI,CAACP,aAAa,CAACU,EAAE,EAACF,GAAG,CAAC,CAACG,SAAS,CAAEC,GAAO,IAAG;MAC3EC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAGlB,CAAC,CAAC;EACJ;;SA5CWtB,gBAAgB;;mBAAhBA,MAAgB;AAAA;;QAAhBA,MAAgB;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV7BC,+BAAqD;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAChDD,8BAA6B;MAClBA,qBAAK;MAAAA,iBAAQ;MACpBA,2BAAiE;MACrEA,iBAAM;MACNA,8BAA6B;MAClBA,qBAAK;MAAAA,iBAAQ;MACpBA,2BAA0E;MAC9EA,iBAAM;MACNA,8BAA6B;MAClBA,6BAAY;MAAAA,iBAAQ;MAC3BA,4BAAgF;MACpFA,iBAAM;MACNA,+BAA6B;MAClBA,6BAAY;MAAAA,iBAAQ;MAC3BA,+BAAwB;MACtBA,4BAA+G;MAC/GA,iCAAgC;MAAAA,0BAAS;MAAAA,iBAAQ;MAEnDA,+BAAwB;MACtBA,4BAAgH;MAChHA,iCAAgC;MAAAA,8BAAa;MAAAA,iBAAQ;MAI3DA,mCAAmD;MAC/CA,uBACJ;MAAAA,iBAAS;MACXA,aACF;;MAAAA,iBAAO;;;MA7BDA,wCAAsB;MAgBmBA,gBAAqB;MAArBA,uCAAqB;MAIrBA,eAAqB;MAArBA,uCAAqB;MAQlEA,eACF;MADEA,2EACF","names":["FormControl","FormGroup","EditCarComponent","constructor","_carCrudService","toastr","_router","maker","model","rentalPrice","isAvailable","getCarToBeEdited","carToBeEdited","editForm","setValue","isChecked","onSubmit","info","navigate","editCar","car","value","id","subscribe","res","console","log","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\amangaur\\Desktop\\Angular_Learning\\CarRentalApp.UI\\src\\app\\Components\\Admin\\edit-car\\edit-car.component.ts","C:\\Users\\amangaur\\Desktop\\Angular_Learning\\CarRentalApp.UI\\src\\app\\Components\\Admin\\edit-car\\edit-car.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { CarCrudService } from 'src/app/Services/car-crud.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-edit-car',\n  templateUrl: './edit-car.component.html',\n  styleUrls: ['./edit-car.component.css']\n})\nexport class EditCarComponent {\n  carToBeEdited:any;\n  //for checked attribute\n  isChecked:boolean=true;\n\n  editForm=new FormGroup({\n    maker:new FormControl(''),\n    model:new FormControl(''),\n    rentalPrice:new FormControl(''),\n    isAvailable:new FormControl('')\n  });\n  \n  constructor(private _carCrudService:CarCrudService,private toastr: ToastrService,private _router: Router){\n    this.getCarToBeEdited();\n\n  }\n  getCarToBeEdited(){\n    this.carToBeEdited=this._carCrudService.getCarToBeEdited();\n    this.editForm.setValue({\n      maker:this.carToBeEdited.maker,\n      model:this.carToBeEdited.model,\n      rentalPrice:this.carToBeEdited.rentalPrice,\n      isAvailable:this.carToBeEdited.isAvailable\n    })\n    if(this.carToBeEdited.isAvailable==\"false\"){\n      this.isChecked=!this.isChecked;\n    }\n   \n  }\n  onSubmit(){\n    this.toastr.info('Successfully Edited','Car Rental App')\n    this._router.navigate(['/cars'])\n    this.editCar();\n  }\n  editCar(){\n    const car={\n      ...this.editForm.value,\n      id:this.carToBeEdited.id\n    }\n    this._carCrudService.editCar(this.carToBeEdited.id,car).subscribe((res:any)=>{\n      console.log(res);\n      \n      \n    })\n  }\n\n\n  \n\n\n  \n\n\n}\n","<form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group mt-2\">\n        <label>Maker</label>\n        <input formControlName=\"maker\" type=\"text\" class=\"form-control\" >\n    </div>\n    <div class=\"form-group mt-3\">\n        <label>Model</label>\n        <input formControlName=\"model\" type=\"text\" class=\"form-control\"  required>\n    </div>\n    <div class=\"form-group mt-3\">\n        <label>Rental Price</label>\n        <input formControlName=\"rentalPrice\" type=\"text\" class=\"form-control\"  required>\n    </div>\n    <div class=\"form-group mt-3\">\n        <label>Availability</label>\n        <div class=\"form-check\">\n          <input formControlName=\"isAvailable\" [checked]=\"isChecked\" type=\"radio\" class=\"form-check-input\"  value=\"true\">\n          <label class=\"form-check-label\">Available</label>\n        </div>\n        <div class=\"form-check\">\n          <input formControlName=\"isAvailable\" [checked]=\"isChecked\" type=\"radio\" class=\"form-check-input\"  value=\"false\">\n          <label class=\"form-check-label\">Not Available</label>\n        </div>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-warning mt-3\">\n        Edit\n    </button>\n  {{editForm.value | json}}\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}