{"ast":null,"code":"var _class;\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction LoginComponent_div_10_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 12);\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_10_small_1_Template, 2, 0, \"small\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.username.errors == null ? null : ctx_r0.username.errors[\"required\"]);\n  }\n}\nfunction LoginComponent_div_15_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 12);\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_15_small_1_Template, 2, 0, \"small\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.password.errors == null ? null : ctx_r1.password.errors[\"required\"]);\n  }\n}\nexport class LoginComponent {\n  constructor() {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  onSubmit() {}\n  get username() {\n    return this.loginForm.controls.username;\n  }\n  get password() {\n    return this.loginForm.controls.password;\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 20,\n  vars: 11,\n  consts: [[1, \"text-center\"], [1, \"container\"], [1, \"row\"], [1, \"col-6\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"mt-2\"], [\"autofocus\", \"\", \"formControlName\", \"username\", \"type\", \"text\", 1, \"form-control\"], [4, \"ngIf\"], [1, \"form-group\", \"mt-3\"], [\"formControlName\", \"password\", \"type\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-3\", 3, \"disabled\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\", 0);\n      i0.ɵɵtext(1, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\");\n      i0.ɵɵtext(8, \"Username: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵtemplate(10, LoginComponent_div_10_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 8)(12, \"label\");\n      i0.ɵɵtext(13, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 9);\n      i0.ɵɵtemplate(15, LoginComponent_div_15_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"button\", 10);\n      i0.ɵɵtext(17, \" Login \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18);\n      i0.ɵɵpipe(19, \"json\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.username.invalid && ctx.username.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.username.invalid && ctx.username.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.password.invalid && ctx.password.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.password.invalid && ctx.password.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(19, 9, ctx.loginForm.value), \" \");\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName, i1.JsonPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;ICQ3CC,iCAAiE;IAAAA,oCAAqB;IAAAA,iBAAQ;;;;;IADlGA,2BAAkD;IAC9CA,2EAA8F;IAClGA,iBAAM;;;;IADMA,eAAmC;IAAnCA,iGAAmC;;;;;IAO3CA,iCAAiE;IAAAA,oCAAoB;IAAAA,iBAAQ;;;;;IADjGA,2BAAkD;IAC9CA,2EAA6F;IACjGA,iBAAM;;;;IADMA,eAAmC;IAAnCA,iGAAmC;;;ADRnE,OAAM,MAAOC,cAAc;EAL3BC;IAME,cAAS,GAAC,IAAIJ,SAAS,CAAC;MACtBK,QAAQ,EAAC,IAAIN,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACK,QAAQ,CAAC,CAAC;MAClDC,QAAQ,EAAC,IAAIR,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACK,QAAQ,CAAC;KAElD,CAAC;;EAEFE,QAAQ,IAER;EAEA,IAAIH,QAAQ;IACV,OAAO,IAAI,CAACI,SAAS,CAACC,QAAQ,CAACL,QAAQ;EAEzC;EACA,IAAIE,QAAQ;IACV,OAAO,IAAI,CAACE,SAAS,CAACC,QAAQ,CAACH,QAAQ;EAEzC;;SAlBWJ,cAAc;;mBAAdA,MAAc;AAAA;;QAAdA,MAAc;EAAAQ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR3Bb,6BAAwB;MAAAA,qBAAK;MAAAA,iBAAK;MAClCA,8BAAuB;MAGmBA;QAAA,OAAYc,cAAU;MAAA,EAAC;MACjDd,8BAA6B;MAClBA,0BAAU;MAAAA,iBAAQ;MACzBA,2BAAwI;MACxIA,iEAEM;MACVA,iBAAM;MACNA,+BAA6B;MAClBA,yBAAQ;MAAAA,iBAAQ;MACvBA,4BAA4I;MAC5IA,iEAEM;MACVA,iBAAM;MAINA,mCAAkF;MAC9EA,wBACJ;MAAAA,iBAAS;MACXA,aACF;;MAAAA,iBAAO;;;MAtBDA,eAAuB;MAAvBA,yCAAuB;MAGJA,eAAyD;MAAzDA,0EAAyD;MACpEA,eAA0C;MAA1CA,mEAA0C;MAMdA,eAAyD;MAAzDA,0EAAyD;MACrFA,eAA0C;MAA1CA,mEAA0C;MAO5CA,eAA8B;MAA9BA,gDAA8B;MAGxCA,eACF;MADEA,2EACF","names":["FormControl","FormGroup","Validators","i0","LoginComponent","constructor","username","required","password","onSubmit","loginForm","controls","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\amangaur\\Desktop\\Angular_Learning\\CarRentalApp.UI\\src\\app\\Components\\AnonymousUser\\login\\login.component.ts","C:\\Users\\amangaur\\Desktop\\Angular_Learning\\CarRentalApp.UI\\src\\app\\Components\\AnonymousUser\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  loginForm=new FormGroup({\n    username:new FormControl('',[Validators.required]),\n    password:new FormControl('',[Validators.required]),\n    \n  });\n\n  onSubmit(){\n    \n  }\n\n  get username(){\n    return this.loginForm.controls.username;\n \n  }\n  get password(){\n    return this.loginForm.controls.password;\n \n  }\n\n}\n","<h3 class=\"text-center\">Login</h3>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group mt-2\">\n                    <label>Username: </label>\n                    <input autofocus [class.is-invalid]=\"username.invalid && username.touched\" formControlName=\"username\" type=\"text\" class=\"form-control\" >\n                    <div *ngIf=\"username.invalid && username.touched\">\n                        <small *ngIf=\"username.errors?.['required']\" class=\"text-danger\">Username  is required</small>\n                    </div>\n                </div>\n                <div class=\"form-group mt-3\">\n                    <label>Password</label>\n                    <input formControlName=\"password\" [class.is-invalid]=\"password.invalid && password.touched\"  type=\"password\" class=\"form-control\"  required>\n                    <div *ngIf=\"password.invalid && password.touched\">\n                        <small *ngIf=\"password.errors?.['required']\" class=\"text-danger\">Password is required</small>\n                    </div>\n                </div>\n                \n                \n            \n                <button [disabled]=\"loginForm.invalid\" type=\"submit\" class=\"btn btn-primary mt-3\">\n                    Login\n                </button>\n              {{loginForm.value | json}}\n            </form>\n\n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}