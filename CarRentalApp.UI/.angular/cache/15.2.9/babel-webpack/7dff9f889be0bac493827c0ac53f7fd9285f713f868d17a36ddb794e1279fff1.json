{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet MyRentalAgreementComponent = class MyRentalAgreementComponent {\n  constructor(_carRentService, _carCrudService, route) {\n    this._carRentService = _carRentService;\n    this._carCrudService = _carCrudService;\n    this.route = route;\n    this.userRentalAgreements = [];\n    this.getUserRentalAgreements();\n  }\n  getUserRentalAgreements() {\n    let username = localStorage.getItem(\"username\");\n    this._carRentService.getUserRentalAgreements(username).subscribe(res => {\n      console.log(res);\n      //userRentalAgreements will contain the carId we need to get maker and model \n      for (let agreement of res) {\n        //for each agreement obj call the api and get the car object\n        this._carCrudService.getCarById(agreement.carId).subscribe(res => {\n          let car = res;\n          //in each agreement object add two more propeties\n          agreement = {\n            ...agreement,\n            maker: car.maker,\n            model: car.model\n          };\n          //add the obj to our array\n          this.userRentalAgreements.push(agreement);\n        });\n      }\n    });\n  }\n  returnRequest(agreementId) {\n    this._carRentService.storeRentalAgreementIdToBeReturned(agreementId);\n    this.route.navigate(['/return-request']);\n  }\n  isUnderInspection(carId) {\n    let b = true;\n    this._carRentService.isUnderInspection(carId).subscribe(res => {\n      b = true;\n    }, err => {\n      b = false;\n    });\n    return b;\n  }\n};\nMyRentalAgreementComponent = __decorate([Component({\n  selector: 'app-my-rental-agreement',\n  templateUrl: './my-rental-agreement.component.html',\n  styleUrls: ['./my-rental-agreement.component.css']\n})], MyRentalAgreementComponent);\nexport { MyRentalAgreementComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUlC,IAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAIrCC,YAAoBC,eAA8B,EAASC,eAA8B,EAASC,KAAY;IAA1F,oBAAe,GAAfF,eAAe;IAAwB,oBAAe,GAAfC,eAAe;IAAwB,UAAK,GAALC,KAAK;IAFvG,yBAAoB,GAAK,EAAE;IAGzB,IAAI,CAACC,uBAAuB,EAAE;EAEhC;EAEAA,uBAAuB;IACrB,IAAIC,QAAQ,GAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC7C,IAAI,CAACN,eAAe,CAACG,uBAAuB,CAACC,QAAQ,CAAC,CAACG,SAAS,CAAEC,GAAO,IAAG;MAC1EC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB;MACA,KAAI,IAAIG,SAAS,IAAIH,GAAG,EAAC;QACvB;QACA,IAAI,CAACP,eAAe,CAACW,UAAU,CAACD,SAAS,CAACE,KAAK,CAAC,CAACN,SAAS,CAAEC,GAAO,IAAG;UACpE,IAAIM,GAAG,GAACN,GAAG;UACX;UACAG,SAAS,GAAC;YAAC,GAAGA,SAAS;YAACI,KAAK,EAACD,GAAG,CAACC,KAAK;YAACC,KAAK,EAACF,GAAG,CAACE;UAAK,CAAC;UACxD;UACA,IAAI,CAACC,oBAAoB,CAACC,IAAI,CAACP,SAAS,CAAC;QAC3C,CAAC,CAAC;;IAGN,CAAC,CAAC;EACJ;EAEAQ,aAAa,CAACC,WAAkB;IAC9B,IAAI,CAACpB,eAAe,CAACqB,kCAAkC,CAACD,WAAW,CAAC;IACpE,IAAI,CAAClB,KAAK,CAACoB,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;EAC1C;EAEAC,iBAAiB,CAACV,KAAY;IAC5B,IAAIW,CAAC,GAAC,IAAI;IACV,IAAI,CAACxB,eAAe,CAACuB,iBAAiB,CAACV,KAAK,CAAC,CAACN,SAAS,CAAEC,GAAO,IAAG;MACjEgB,CAAC,GAAC,IAAI;IACR,CAAC,EAAEC,GAAO,IAAG;MACXD,CAAC,GAAC,KAAK;IACT,CAAC,CAAC;IACF,OAAOA,CAAC;EACV;CAED;AA3CY1B,0BAA0B,eALtCD,SAAS,CAAC;EACT6B,QAAQ,EAAE,yBAAyB;EACnCC,WAAW,EAAE,sCAAsC;EACnDC,SAAS,EAAE,CAAC,qCAAqC;CAClD,CAAC,GACW9B,0BAA0B,CA2CtC;SA3CYA,0BAA0B","names":["Component","MyRentalAgreementComponent","constructor","_carRentService","_carCrudService","route","getUserRentalAgreements","username","localStorage","getItem","subscribe","res","console","log","agreement","getCarById","carId","car","maker","model","userRentalAgreements","push","returnRequest","agreementId","storeRentalAgreementIdToBeReturned","navigate","isUnderInspection","b","err","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\amangaur\\Desktop\\Angular_Learning\\CarRentalApp.UI\\src\\app\\Components\\LoggedInUser\\my-rental-agreement\\my-rental-agreement.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CarCrudService } from 'src/app/Services/car-crud.service';\nimport { CarRentService } from 'src/app/Services/car-rent.service';\n\n@Component({\n  selector: 'app-my-rental-agreement',\n  templateUrl: './my-rental-agreement.component.html',\n  styleUrls: ['./my-rental-agreement.component.css']\n})\nexport class MyRentalAgreementComponent {\n  \n  userRentalAgreements:any=[];\n  \n  constructor(private _carRentService:CarRentService,private _carCrudService:CarCrudService,private route:Router){\n    this.getUserRentalAgreements();\n\n  }\n\n  getUserRentalAgreements(){\n    let username=localStorage.getItem(\"username\");\n    this._carRentService.getUserRentalAgreements(username).subscribe((res:any)=>{\n      console.log(res)\n      //userRentalAgreements will contain the carId we need to get maker and model \n      for(let agreement of res){\n        //for each agreement obj call the api and get the car object\n        this._carCrudService.getCarById(agreement.carId).subscribe((res:any)=>{\n          let car=res;\n          //in each agreement object add two more propeties\n          agreement={...agreement,maker:car.maker,model:car.model}\n          //add the obj to our array\n          this.userRentalAgreements.push(agreement);\n        })\n      }\n      \n    })\n  }\n\n  returnRequest(agreementId:number){\n    this._carRentService.storeRentalAgreementIdToBeReturned(agreementId);\n    this.route.navigate(['/return-request'])\n  }\n  \n  isUnderInspection(carId:number){\n    let b=true;\n    this._carRentService.isUnderInspection(carId).subscribe((res:any)=>{\n      b=true;\n    },(err:any)=>{\n      b=false;\n    })\n    return b;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}