{"ast":null,"code":"var _class;\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/car-crud.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction EditCarComponent_div_5_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 13);\n    i0.ɵɵtext(1, \"Maker name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditCarComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, EditCarComponent_div_5_small_1_Template, 2, 0, \"small\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.maker.errors == null ? null : ctx_r0.maker.errors[\"required\"]);\n  }\n}\nfunction EditCarComponent_div_10_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 13);\n    i0.ɵɵtext(1, \"Model name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditCarComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, EditCarComponent_div_10_small_1_Template, 2, 0, \"small\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.model.errors == null ? null : ctx_r1.model.errors[\"required\"]);\n  }\n}\nfunction EditCarComponent_div_15_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 13);\n    i0.ɵɵtext(1, \"Rental price is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditCarComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, EditCarComponent_div_15_small_1_Template, 2, 0, \"small\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.rentalPrice.errors == null ? null : ctx_r2.rentalPrice.errors[\"required\"]);\n  }\n}\nexport class EditCarComponent {\n  constructor(_carCrudService, toastr, _router) {\n    this._carCrudService = _carCrudService;\n    this.toastr = toastr;\n    this._router = _router;\n    //for checked attribute\n    this.isChecked = true;\n    this.editForm = new FormGroup({\n      maker: new FormControl('', [Validators.required]),\n      model: new FormControl('', [Validators.required]),\n      rentalPrice: new FormControl('', [Validators.required]),\n      isAvailable: new FormControl('')\n    });\n    this.getCarToBeEdited();\n  }\n  getCarToBeEdited() {\n    this.carToBeEdited = this._carCrudService.getCarToBeEdited();\n    this.editForm.setValue({\n      maker: this.carToBeEdited.maker,\n      model: this.carToBeEdited.model,\n      rentalPrice: this.carToBeEdited.rentalPrice,\n      isAvailable: this.carToBeEdited.isAvailable\n    });\n    if (this.carToBeEdited.isAvailable == \"false\") {\n      this.isChecked = !this.isChecked;\n    }\n  }\n  onSubmit() {\n    this.toastr.info('Successfully Edited', 'Car Rental App');\n    this._router.navigate(['/cars']);\n    this.editCar();\n  }\n  editCar() {\n    const car = {\n      ...this.editForm.value,\n      id: this.carToBeEdited.id\n    };\n    this._carCrudService.editCar(this.carToBeEdited.id, car).subscribe(res => {\n      console.log(res);\n    });\n  }\n  //for validation\n  get maker() {\n    return this.editForm.controls.maker;\n  }\n  get model() {\n    return this.editForm.controls.model;\n  }\n  get rentalPrice() {\n    return this.editForm.controls.rentalPrice;\n  }\n}\n_class = EditCarComponent;\n_class.ɵfac = function EditCarComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.CarCrudService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-edit-car\"]],\n  decls: 31,\n  vars: 15,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"mt-2\"], [\"formControlName\", \"maker\", \"type\", \"text\", 1, \"form-control\"], [4, \"ngIf\"], [1, \"form-group\", \"mt-3\"], [\"formControlName\", \"model\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\"], [\"formControlName\", \"rentalPrice\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\"], [1, \"form-check\"], [\"formControlName\", \"isAvailable\", \"type\", \"radio\", \"value\", \"true\", 1, \"form-check-input\", 3, \"checked\"], [1, \"form-check-label\"], [\"formControlName\", \"isAvailable\", \"type\", \"radio\", \"value\", \"false\", 1, \"form-check-input\", 3, \"checked\"], [\"type\", \"submit\", 1, \"btn\", \"btn-warning\", \"mt-3\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n  template: function EditCarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function EditCarComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\");\n      i0.ɵɵtext(3, \"Maker\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵtemplate(5, EditCarComponent_div_5_Template, 2, 1, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\");\n      i0.ɵɵtext(8, \"Model\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 5);\n      i0.ɵɵtemplate(10, EditCarComponent_div_10_Template, 2, 1, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\");\n      i0.ɵɵtext(13, \"Rental Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 6);\n      i0.ɵɵtemplate(15, EditCarComponent_div_15_Template, 2, 1, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 4)(17, \"label\");\n      i0.ɵɵtext(18, \"Availability\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 7);\n      i0.ɵɵelement(20, \"input\", 8);\n      i0.ɵɵelementStart(21, \"label\", 9);\n      i0.ɵɵtext(22, \"Available\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 7);\n      i0.ɵɵelement(24, \"input\", 10);\n      i0.ɵɵelementStart(25, \"label\", 9);\n      i0.ɵɵtext(26, \"Not Available\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(27, \"button\", 11);\n      i0.ɵɵtext(28, \" Edit \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(29);\n      i0.ɵɵpipe(30, \"json\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.editForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.maker.invalid && ctx.maker.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.maker.invalid && ctx.maker.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.model.invalid && ctx.model.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.model.invalid && ctx.model.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.rentalPrice.invalid && ctx.rentalPrice.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.rentalPrice.invalid && ctx.rentalPrice.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"checked\", ctx.isChecked);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"checked\", ctx.isChecked);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(30, 13, ctx.editForm.value), \"\\n\");\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.RadioControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.FormGroupDirective, i5.FormControlName, i4.JsonPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","EditCarComponent","constructor","_carCrudService","toastr","_router","maker","required","model","rentalPrice","isAvailable","getCarToBeEdited","carToBeEdited","editForm","setValue","isChecked","onSubmit","info","navigate","editCar","car","value","id","subscribe","res","console","log","controls","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\amangaur\\Desktop\\Angular_Learning\\CarRentalApp.UI\\src\\app\\Components\\Admin\\edit-car\\edit-car.component.ts","C:\\Users\\amangaur\\Desktop\\Angular_Learning\\CarRentalApp.UI\\src\\app\\Components\\Admin\\edit-car\\edit-car.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CarCrudService } from 'src/app/Services/car-crud.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-edit-car',\n  templateUrl: './edit-car.component.html',\n  styleUrls: ['./edit-car.component.css']\n})\nexport class EditCarComponent {\n  carToBeEdited:any;\n  //for checked attribute\n  isChecked:boolean=true;\n\n  editForm=new FormGroup({\n    maker:new FormControl('',[Validators.required]),\n    model:new FormControl('',[Validators.required]),\n    rentalPrice:new FormControl('',[Validators.required]),\n    isAvailable:new FormControl('')\n  });\n  \n  constructor(private _carCrudService:CarCrudService,private toastr: ToastrService,private _router: Router){\n    this.getCarToBeEdited();\n\n  }\n  getCarToBeEdited(){\n    this.carToBeEdited=this._carCrudService.getCarToBeEdited();\n    this.editForm.setValue({\n      maker:this.carToBeEdited.maker,\n      model:this.carToBeEdited.model,\n      rentalPrice:this.carToBeEdited.rentalPrice,\n      isAvailable:this.carToBeEdited.isAvailable\n    })\n    if(this.carToBeEdited.isAvailable==\"false\"){\n      this.isChecked=!this.isChecked;\n    }\n   \n  }\n  onSubmit(){\n    this.toastr.info('Successfully Edited','Car Rental App')\n    this._router.navigate(['/cars'])\n    this.editCar();\n  }\n  editCar(){\n    const car={\n      ...this.editForm.value,\n      id:this.carToBeEdited.id\n    }\n    this._carCrudService.editCar(this.carToBeEdited.id,car).subscribe((res:any)=>{\n      console.log(res);\n      \n      \n    })\n  }\n\n  //for validation\n  get maker(){\n    return this.editForm.controls.maker;\n \n  }\n  get model(){\n    return this.editForm.controls.model;\n \n  }\n  get rentalPrice(){\n    return this.editForm.controls.rentalPrice;\n\n  }\n\n  \n\n\n  \n\n\n}\n","<form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group mt-2\">\n        <label>Maker</label>\n        <input [class.is-invalid]=\"maker.invalid && maker.touched\" formControlName=\"maker\" type=\"text\" class=\"form-control\" >\n        <div *ngIf=\"maker.invalid && maker.touched\">\n            <small *ngIf=\"maker.errors?.['required']\" class=\"text-danger\">Maker name is required</small>\n        </div>\n    </div>\n    <div class=\"form-group mt-3\">\n        <label>Model</label>\n        <input formControlName=\"model\" [class.is-invalid]=\"model.invalid && model.touched\"  type=\"text\" class=\"form-control\"  required>\n        <div *ngIf=\"model.invalid && model.touched\">\n            <small *ngIf=\"model.errors?.['required']\" class=\"text-danger\">Model name is required</small>\n        </div>\n    </div>\n    <div class=\"form-group mt-3\">\n        <label>Rental Price</label>\n        <input formControlName=\"rentalPrice\" [class.is-invalid]=\"rentalPrice.invalid && rentalPrice.touched\" type=\"text\" class=\"form-control\"  required>\n        <div *ngIf=\"rentalPrice.invalid && rentalPrice.touched\">\n            <small *ngIf=\"rentalPrice.errors?.['required']\" class=\"text-danger\">Rental price is required</small>\n        </div>\n    </div>\n    <div class=\"form-group mt-3\">\n        <label>Availability</label>\n        <div class=\"form-check\">\n          <input formControlName=\"isAvailable\" [checked]=\"isChecked\" type=\"radio\" class=\"form-check-input\"  value=\"true\">\n          <label class=\"form-check-label\">Available</label>\n        </div>\n        <div class=\"form-check\">\n          <input formControlName=\"isAvailable\" [checked]=\"isChecked\" type=\"radio\" class=\"form-check-input\"  value=\"false\">\n          <label class=\"form-check-label\">Not Available</label>\n        </div>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-warning mt-3\">\n        Edit\n    </button>\n  {{editForm.value | json}}\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}