{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CarRentService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = \"https://localhost:7018/api/CarRent/\";\n    //markedForInspection:number=0;\n    //below value will be filled when user clicks return request button on my agreements page\n    this.rentalAgreementIdToBeReturned = 0;\n  }\n  storeRentalAgreement(obj) {\n    this.rentalAgreement = obj;\n  }\n  //it will give the agreement objects that is going to be generated\n  getRentalAgreement() {\n    console.log(this.rentalAgreement);\n    return this.rentalAgreement;\n  }\n  //send the rental agreement to api\n  acceptRentalAgreement(agreement) {\n    return this.http.post(this.apiUrl + \"rent\", agreement);\n  }\n  //get user rental agreements based on username\n  getUserRentalAgreements(username) {\n    return this.http.get(this.apiUrl + \"RentalAgreements/\" + username);\n  }\n  returnInitiate(rentalAgreementId) {\n    return this.http.get(this.apiUrl + \"Return/\" + rentalAgreementId);\n  }\n  storeRentalAgreementIdToBeReturned(id) {\n    this.rentalAgreementIdToBeReturned = id;\n  }\n  getRentalAgreementToBeReturned() {\n    return this.rentalAgreementIdToBeReturned;\n  }\n  getAllRentalAgreements() {\n    return this.http.get(this.apiUrl + \"RentalAgreements/\");\n  }\n  deleteRentalAgreement(agreementId) {\n    return this.http.delete(this.apiUrl + \"Delete/\" + agreementId);\n  }\n  getRentalAgreementById(rentalAgreementId) {\n    return this.http.get(this.apiUrl + \"GetRentalAgreement/\" + rentalAgreementId);\n  }\n  updateRentalAgreement(id, rentalAgreementObj) {\n    return this.http.put(this.apiUrl + \"RentalAgreement/\" + id, rentalAgreementObj);\n  }\n  markForInspection(obj) {\n    return this.http.post(this.apiUrl + \"MarkForInspection\", obj);\n  }\n  getCarInspections() {\n    return this.http.get(this.apiUrl + \"GetCarInspections\");\n  }\n  inspectionCompleted(carId) {\n    return this.http.get(this.apiUrl + \"InspectionCompleted/\" + carId);\n  }\n  isUnderInspection(carId) {\n    return this.http.get(this.apiUrl + \"IsUnderInspection/\" + carId);\n  }\n}\n_class = CarRentService;\n_class.ɵfac = function CarRentService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAMA,OAAM,MAAOA,cAAc;EAMzBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IALhB,WAAM,GAAC,qCAAqC;IAEpD;IACA;IACA,kCAA6B,GAAQ,CAAC;EACC;EAEvCC,oBAAoB,CAACC,GAAO;IAC1B,IAAI,CAACC,eAAe,GAACD,GAAG;EAC1B;EAEA;EACAE,kBAAkB;IAChBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,eAAe,CAAC;IACjC,OAAO,IAAI,CAACA,eAAe;EAC7B;EACA;EACAI,qBAAqB,CAACC,SAAa;IACjC,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,IAAI,CAACC,MAAM,GAAC,MAAM,EAACF,SAAS,CAAC;EACrD;EAEA;EACAG,uBAAuB,CAACC,QAAY;IAClC,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAC,IAAI,CAACH,MAAM,GAAC,mBAAmB,GAACE,QAAQ,CAAC;EAChE;EAEAE,cAAc,CAACC,iBAAwB;IACrC,OAAO,IAAI,CAACf,IAAI,CAACa,GAAG,CAAC,IAAI,CAACH,MAAM,GAAC,SAAS,GAACK,iBAAiB,CAAE;EAEhE;EAEAC,kCAAkC,CAACC,EAAS;IAC1C,IAAI,CAACC,6BAA6B,GAACD,EAAE;EACvC;EAEAE,8BAA8B;IAC5B,OAAO,IAAI,CAACD,6BAA6B;EAC3C;EAEAE,sBAAsB;IACpB,OAAO,IAAI,CAACpB,IAAI,CAACa,GAAG,CAAC,IAAI,CAACH,MAAM,GAAC,mBAAmB,CAAC;EACvD;EAEAW,qBAAqB,CAACC,WAAkB;IACtC,OAAO,IAAI,CAACtB,IAAI,CAACuB,MAAM,CAAC,IAAI,CAACb,MAAM,GAAC,SAAS,GAACY,WAAW,CAAC;EAC5D;EAEAE,sBAAsB,CAACT,iBAAwB;IAC7C,OAAO,IAAI,CAACf,IAAI,CAACa,GAAG,CAAC,IAAI,CAACH,MAAM,GAAC,qBAAqB,GAACK,iBAAiB,CAAC;EAC3E;EAEAU,qBAAqB,CAACR,EAAS,EAACS,kBAAsB;IACpD,OAAO,IAAI,CAAC1B,IAAI,CAAC2B,GAAG,CAAC,IAAI,CAACjB,MAAM,GAAC,kBAAkB,GAACO,EAAE,EAACS,kBAAkB,CAAC;EAC5E;EAEAE,iBAAiB,CAAC1B,GAAO;IACvB,OAAO,IAAI,CAACF,IAAI,CAACS,IAAI,CAAC,IAAI,CAACC,MAAM,GAAC,mBAAmB,EAACR,GAAG,CAAC;EAC5D;EAEA2B,iBAAiB;IACf,OAAO,IAAI,CAAC7B,IAAI,CAACa,GAAG,CAAC,IAAI,CAACH,MAAM,GAAC,mBAAmB,CAAC;EACvD;EAEAoB,mBAAmB,CAACC,KAAY;IAC9B,OAAO,IAAI,CAAC/B,IAAI,CAACa,GAAG,CAAC,IAAI,CAACH,MAAM,GAAC,sBAAsB,GAACqB,KAAK,CAAC;EAChE;EAEAC,iBAAiB,CAACD,KAAY;IAC5B,OAAO,IAAI,CAAC/B,IAAI,CAACa,GAAG,CAAC,IAAI,CAACH,MAAM,GAAC,oBAAoB,GAACqB,KAAK,CAAC;EAC9D;;SAtEWjC,cAAc;;mBAAdA,MAAc;AAAA;;SAAdA,MAAc;EAAAmC,SAAdnC,MAAc;EAAAoC,YAFb;AAAM","names":["CarRentService","constructor","http","storeRentalAgreement","obj","rentalAgreement","getRentalAgreement","console","log","acceptRentalAgreement","agreement","post","apiUrl","getUserRentalAgreements","username","get","returnInitiate","rentalAgreementId","storeRentalAgreementIdToBeReturned","id","rentalAgreementIdToBeReturned","getRentalAgreementToBeReturned","getAllRentalAgreements","deleteRentalAgreement","agreementId","delete","getRentalAgreementById","updateRentalAgreement","rentalAgreementObj","put","markForInspection","getCarInspections","inspectionCompleted","carId","isUnderInspection","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\amangaur\\Desktop\\Angular_Learning\\CarRentalApp.UI\\src\\app\\Services\\car-rent.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarRentService {\n  private apiUrl=\"https://localhost:7018/api/CarRent/\";\n  rentalAgreement:any;\n  //markedForInspection:number=0;\n  //below value will be filled when user clicks return request button on my agreements page\n  rentalAgreementIdToBeReturned:number=0;\n  constructor(private http:HttpClient) { }\n\n  storeRentalAgreement(obj:any){\n    this.rentalAgreement=obj;\n  }\n\n  //it will give the agreement objects that is going to be generated\n  getRentalAgreement(){\n    console.log(this.rentalAgreement)\n    return this.rentalAgreement;\n  }\n  //send the rental agreement to api\n  acceptRentalAgreement(agreement:any){\n    return this.http.post(this.apiUrl+\"rent\",agreement)\n  }\n\n  //get user rental agreements based on username\n  getUserRentalAgreements(username:any){\n    return this.http.get(this.apiUrl+\"RentalAgreements/\"+username)\n  }\n\n  returnInitiate(rentalAgreementId:number){\n    return this.http.get(this.apiUrl+\"Return/\"+rentalAgreementId,)\n\n  }\n\n  storeRentalAgreementIdToBeReturned(id:number){\n    this.rentalAgreementIdToBeReturned=id;\n  }\n\n  getRentalAgreementToBeReturned(){\n    return this.rentalAgreementIdToBeReturned;\n  }\n\n  getAllRentalAgreements(){\n    return this.http.get(this.apiUrl+\"RentalAgreements/\");\n  }\n\n  deleteRentalAgreement(agreementId:number){\n    return this.http.delete(this.apiUrl+\"Delete/\"+agreementId);\n  }\n\n  getRentalAgreementById(rentalAgreementId:number){\n    return this.http.get(this.apiUrl+\"GetRentalAgreement/\"+rentalAgreementId)\n  }\n\n  updateRentalAgreement(id:number,rentalAgreementObj:any){\n    return this.http.put(this.apiUrl+\"RentalAgreement/\"+id,rentalAgreementObj)\n  }\n\n  markForInspection(obj:any){\n    return this.http.post(this.apiUrl+\"MarkForInspection\",obj);\n  }\n\n  getCarInspections(){\n    return this.http.get(this.apiUrl+\"GetCarInspections\");\n  }\n\n  inspectionCompleted(carId:number){\n    return this.http.get(this.apiUrl+\"InspectionCompleted/\"+carId);\n  }\n\n  isUnderInspection(carId:number){\n    return this.http.get(this.apiUrl+\"IsUnderInspection/\"+carId);\n  }\n  // storeMarkedForInspection(id:number){\n  //   this.markedForInspection=id;\n\n  // }\n  // getMarkedForInspection(){\n  //   return this.markedForInspection;\n  // }\n}\n "]},"metadata":{},"sourceType":"module","externalDependencies":[]}